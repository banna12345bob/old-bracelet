plugins {
	id 'fabric-loom' version '1.8.10'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://aperlambda.github.io/maven' }
}
dependencies {
	implementation('org.aperlambda:lambdajcommon:1.8.1') {
		exclude group: 'com.google.code.gson'
		exclude group: 'com.google.guava'
	}
}

repositories {
	maven { url "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
	maven { url "https://maven.terraformersmc.com/releases/" } // Mod menu
	maven { url "https://api.modrinth.com/maven" } // Modrinth stuff
	maven { url 'https://maven.kosmx.dev/' } // Player Animation Lib
	maven { url = "https://jm.gserv.me/repository/maven-public/" } // common-networking
	// GeckoLib
	maven {
		name = 'GeckoLib'
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
		content {
			includeGroup("software.bernie.geckolib")
		}
	}
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	// Quilt Mappings
	mappings "org.quiltmc:quilt-mappings:${project.minecraft_version}+build.${project.qm_version}:intermediary-v2"

//	Official Mojang Mappings
//	mappings loom.officialMojangMappings()

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// https://modrinth.com/mod/modmenu
	modRuntimeOnly ("com.terraformersmc:modmenu:${project.modmenu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// https://github.com/mysticdrew/common-networking
	modImplementation "mysticdrew:common-networking-fabric:${common_networking_version}"

	// https://modrinth.com/mod/geckolib
	modImplementation "software.bernie.geckolib:geckolib-fabric-${project.geckolib_version}"

	// https://modrinth.com/mod/playeranimator - Should be included default
	modImplementation include ("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim_version}")

	// https://modrinth.com/mod/better-third-person
	modImplementation "maven.modrinth:better-third-person:${project.BetterThirdPerson_version}-fabric,1.21"

	// https://modrinth.com/mod/midnightcontrols
	if (project.controller == "true") {
		modRuntimeOnly "maven.modrinth:MidnightControls:${project.midnightcontrols_version}-fabric"
		modRuntimeOnly "maven.modrinth:obsidianui:${project.obsidianui_version}-fabric"
		modRuntimeOnly "maven.modrinth:midnightlib:${project.midnightlib_version}-fabric"
	}

	// https://modrinth.com/mod/sodium
	modRuntimeOnly "maven.modrinth:sodium:${project.sodium_version}-fabric"

	// https://modrinth.com/mod/dev-tools-unlocker
	modRuntimeOnly "maven.modrinth:dev-tools-unlocker:${project.devTools_Version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}